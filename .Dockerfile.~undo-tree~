(undo-tree-save-format-version . 1)
"0a3c992db884fb30637c08856a66f64e18e7f76c"
[nil nil nil nil (26367 29549 827946 418000) 0 nil]
([nil nil ((73 . 76) ("i" . -73) (undo-tree-id0 . -1) (73 . 74) ("a" . -73) (undo-tree-id1 . -1) 74 (69 . 74) (t 26366 30852 520903 111000)) nil (26367 29549 827941 981000) 0 nil])
([nil nil ((325 . 328) ("8" . -325) (undo-tree-id2 . -1) ("0" . -326) (undo-tree-id3 . -1) 327 (t 26367 29549 860911 299000)) nil (26367 29579 150089 281000) 0 nil])
([nil nil ((1 . 1117) ("# Dockerfile
# Use the official Node.js image as a base
FROM node:18-alpine

# Set the working directory
WORKDIR /usr/src/app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of the application code
COPY . .

# Expose the port your app runs on
EXPOSE 443

# Start the application
CMD [\"node\", \"app.js\"]

" . 1) (undo-tree-id152 . 50) (undo-tree-id153 . -326) (undo-tree-id154 . -326) (undo-tree-id155 . -377) (undo-tree-id156 . -328) (undo-tree-id157 . -328) (undo-tree-id158 . -328) (undo-tree-id159 . -377) (undo-tree-id160 . -377) (undo-tree-id161 . -377) (undo-tree-id162 . -376) 378 (t 26367 29579 183376 86000)) nil (26367 30211 686092 911000) 0 nil])
([nil nil ((50 . 53) ("i" . -50) (undo-tree-id4 . -1) (undo-tree-id5 . -1) (undo-tree-id6 . -1) (undo-tree-id7 . -1) (undo-tree-id8 . -1) (undo-tree-id9 . -1) (48 . 51) ("p" . -48) (undo-tree-id10 . -1) (undo-tree-id11 . -1) (undo-tree-id12 . -1) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (undo-tree-id15 . -1) (undo-tree-id16 . -1) (undo-tree-id17 . -1) (undo-tree-id18 . -1) (undo-tree-id19 . -1) (undo-tree-id20 . -1) (undo-tree-id21 . -1) (undo-tree-id22 . -1) (undo-tree-id23 . -1) (undo-tree-id24 . -1) (undo-tree-id25 . -1) (undo-tree-id26 . -1) (undo-tree-id27 . -1) (undo-tree-id28 . -1) (undo-tree-id29 . -1) (undo-tree-id30 . -1) (undo-tree-id31 . -1) (undo-tree-id32 . -1) (undo-tree-id33 . -1) (undo-tree-id34 . -1) (undo-tree-id35 . -1) (undo-tree-id36 . -1) (undo-tree-id37 . -1) (undo-tree-id38 . -1) (undo-tree-id39 . -1) (undo-tree-id40 . -1) (undo-tree-id41 . -1) (undo-tree-id42 . -1) (undo-tree-id43 . -1) ("l" . -49) (undo-tree-id44 . -1) (undo-tree-id45 . -1) (undo-tree-id46 . -1) (undo-tree-id47 . -1) (undo-tree-id48 . -1) (undo-tree-id49 . -1) (undo-tree-id50 . -1) (undo-tree-id51 . -1) (undo-tree-id52 . -1) (undo-tree-id53 . -1) (undo-tree-id54 . -1) (undo-tree-id55 . -1) (undo-tree-id56 . -1) (undo-tree-id57 . -1) (undo-tree-id58 . -1) (undo-tree-id59 . -1) (undo-tree-id60 . -1) (undo-tree-id61 . -1) (undo-tree-id62 . -1) (undo-tree-id63 . -1) 50 (44 . 50) ("8" . -44) (undo-tree-id64 . -1) (undo-tree-id65 . -1) (undo-tree-id66 . -1) (undo-tree-id67 . -1) (undo-tree-id68 . -1) (undo-tree-id69 . -1) (undo-tree-id70 . -1) (undo-tree-id71 . -1) (undo-tree-id72 . -1) (undo-tree-id73 . -1) (undo-tree-id74 . -1) (undo-tree-id75 . -1) (undo-tree-id76 . -1) (undo-tree-id77 . -1) (undo-tree-id78 . -1) (undo-tree-id79 . -1) (undo-tree-id80 . -1) (undo-tree-id81 . -1) (undo-tree-id82 . -1) (undo-tree-id83 . -1) 45 (44 . 45) ("1" . -44) (undo-tree-id84 . -1) (undo-tree-id85 . -1) (undo-tree-id86 . -1) (undo-tree-id87 . -1) (undo-tree-id88 . -1) (undo-tree-id89 . -1) (undo-tree-id90 . -1) (undo-tree-id91 . -1) (undo-tree-id92 . -1) (undo-tree-id93 . -1) (undo-tree-id94 . -1) (undo-tree-id95 . -1) (undo-tree-id96 . -1) (undo-tree-id97 . -1) (undo-tree-id98 . -1) (undo-tree-id99 . -1) (undo-tree-id100 . -1) (undo-tree-id101 . -1) (undo-tree-id102 . -1) (undo-tree-id103 . -1) (undo-tree-id104 . -1) (undo-tree-id105 . -1) (undo-tree-id106 . -1) (undo-tree-id107 . -1) (undo-tree-id108 . -1) (undo-tree-id109 . -1) (undo-tree-id110 . -1) (undo-tree-id111 . -1) (undo-tree-id112 . -1) (undo-tree-id113 . -1) (undo-tree-id114 . -1) (undo-tree-id115 . -1) (undo-tree-id116 . -1) (undo-tree-id117 . -1) (undo-tree-id118 . -1) (undo-tree-id119 . -1) (undo-tree-id120 . -1) (undo-tree-id121 . -1) (undo-tree-id122 . -1) (undo-tree-id123 . -1) (undo-tree-id124 . -1) (undo-tree-id125 . -1) (undo-tree-id126 . -1) (undo-tree-id127 . -1) (undo-tree-id128 . -1) (undo-tree-id129 . -1) (undo-tree-id130 . -1) (undo-tree-id131 . -1) (undo-tree-id132 . -1) (undo-tree-id133 . -1) (undo-tree-id134 . -1) (undo-tree-id135 . -1) (undo-tree-id136 . -1) ("4" . -45) (undo-tree-id137 . -1) (undo-tree-id138 . -1) (undo-tree-id139 . -1) (undo-tree-id140 . -1) (undo-tree-id141 . -1) (undo-tree-id142 . -1) (undo-tree-id143 . -1) (undo-tree-id144 . -1) (undo-tree-id145 . -1) (undo-tree-id146 . -1) (undo-tree-id147 . -1) (undo-tree-id148 . -1) (undo-tree-id149 . -1) (undo-tree-id150 . -1) (undo-tree-id151 . -1) 46) nil (26367 30211 686074 108000) 0 nil])
([nil nil (("# Use the official Node.js image
FROM node:18-alpine

# Set working directory
WORKDIR /usr/src/app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of your application code
COPY . .

# Define build argument to determine environment
ARG ENV=development

# Generate self-signed certificates for development
RUN if [ \"$ENV\" = \"development\" ]; then \\
      apt-get update && \\
      apt-get install -y openssl && \\
      openssl req -nodes -new -x509 -keyout /etc/ssl/private/server.key -out /etc/ssl/certs/server.cert -days 365 -subj \"/C=US/ST=California/L=San Francisco/O=MyOrg/OU=MyUnit/CN=localhost\"; \\
    else \\
      echo \"Skipping certificate generation for production.\" ; \\
    fi

# Copy production certificates into the container if not in development
COPY path/to/your/server.cert /etc/ssl/certs/server.cert || echo \"No production certificates provided.\"
COPY path/to/your/server.key /etc/ssl/private/server.key || echo \"No production key provided.\"

# Expose the HTTPS port
EXPOSE 443

# Start the Node.js application
CMD [\"node\", \"app.js\"]
" . 1) (undo-tree-id163 . 1071) (undo-tree-id164 . -1123) (undo-tree-id165 . -31) (undo-tree-id166 . -1123) (undo-tree-id167 . -1122) (undo-tree-id168 . -1123) (undo-tree-id169 . -205) (undo-tree-id170 . -1067) (undo-tree-id171 . -1123) (undo-tree-id172 . -1123) (undo-tree-id173 . -484) (undo-tree-id174 . -256) (undo-tree-id175 . -675) (undo-tree-id176 . -31) (undo-tree-id177 . -1123) (undo-tree-id178 . -1123) 1124 (t 26367 30211 721290 553000)) nil (26367 30657 391852 209000) 0 nil])
([nil nil ((1 . 1098)) nil (26367 32563 458 160000) 0 nil])
([nil nil ((1004 . 1005) ("\"" . 1004) (undo-tree-id197 . -1) (t 26367 30657 451404 679000)) nil (26367 32574 605911 869000) 0 nil] [nil nil ((910 . 911) ("
" . -910) (undo-tree-id179 . -1) 872 (t 26367 30657 451404 679000)) ((910 . 911) (" " . 910)) (26367 32563 228 639000) 0 nil])
([nil nil ((976 . 977) ("\"" . 976) (undo-tree-id184 . -1) (undo-tree-id185 . -1) (undo-tree-id186 . -1) (undo-tree-id187 . -1) (undo-tree-id188 . -1) (undo-tree-id189 . -1) (undo-tree-id190 . -1) (undo-tree-id191 . -1) (undo-tree-id192 . -1) (undo-tree-id193 . -1) (undo-tree-id194 . -1) (undo-tree-id195 . -1) (undo-tree-id196 . -1)) nil (26367 32574 605909 439000) 0 nil])
nil
([nil nil ((872 . 873) ("\"" . 872) (undo-tree-id183 . -1)) nil (26367 32574 605897 54000) 0 nil])
([nil nil ((909 . 910) ("\"" . 909) (undo-tree-id180 . -1) (undo-tree-id181 . -1) (undo-tree-id182 . -1)) nil (26367 32574 605892 717000) 0 nil])
([nil nil (("COPY path/to/your/server.cert /etc/ssl/certs/server.cert || echo \"No production certificates provided.\"
COPY path/to/your/server.key /etc/ssl/private/server.key || echo \"No production key provided.\"

# Expose the HTTPS port
EXPOSE 443

# Start the Node.js application
CMD [\"node\", \"app.js\"]
" . 807) (undo-tree-id1269 . -291) (undo-tree-id1270 . -19) (undo-tree-id1271 . -291) (undo-tree-id1272 . -290) (undo-tree-id1273 . -291) (undo-tree-id1274 . -291) (undo-tree-id1275 . -65) (undo-tree-id1276 . -65) (undo-tree-id1277 . -102) (undo-tree-id1278 . -102) (undo-tree-id1279 . -65) (undo-tree-id1280 . -65) (undo-tree-id1281 . -65) (undo-tree-id1282 . -169) (undo-tree-id1283 . -169) (undo-tree-id1284 . -169) (undo-tree-id1285 . -169) (undo-tree-id1286 . -169) (undo-tree-id1287 . -169) (undo-tree-id1288 . -169) (undo-tree-id1289 . -169) (undo-tree-id1290 . -169) (undo-tree-id1291 . -169) (undo-tree-id1292 . -169) (undo-tree-id1293 . -169) (undo-tree-id1294 . -169) (undo-tree-id1295 . -169) (undo-tree-id1296 . -169) (undo-tree-id1297 . -19) (undo-tree-id1298 . -291) (undo-tree-id1299 . -291) 1098 (t 26367 32574 661524 626000)) nil (26367 32607 971212 680000) 0 nil])
([nil nil (("
" . -806) (undo-tree-id1234 . -1) (undo-tree-id1235 . -1) (undo-tree-id1236 . -1) (undo-tree-id1237 . -1) (undo-tree-id1238 . -1) (undo-tree-id1239 . -1) (undo-tree-id1240 . -1) (undo-tree-id1241 . -1) (undo-tree-id1242 . -1) (undo-tree-id1243 . -1) (undo-tree-id1244 . -1) (undo-tree-id1245 . -1) (undo-tree-id1246 . -1) (undo-tree-id1247 . -1) (undo-tree-id1248 . -1) (undo-tree-id1249 . -1) (undo-tree-id1250 . -1) (undo-tree-id1251 . -1) (undo-tree-id1252 . -1) (undo-tree-id1253 . -1) (undo-tree-id1254 . -1) (undo-tree-id1255 . -1) (undo-tree-id1256 . -1) (undo-tree-id1257 . -1) (undo-tree-id1258 . -1) (undo-tree-id1259 . -1) (undo-tree-id1260 . -1) (undo-tree-id1261 . -1) (undo-tree-id1262 . -1) (undo-tree-id1263 . -1) (undo-tree-id1264 . -1) (undo-tree-id1265 . -1) (undo-tree-id1266 . -1) (undo-tree-id1267 . -1) (undo-tree-id1268 . -1) 807) nil (26367 32607 971190 923000) 0 nil])
([nil nil (("
# Copy production certificates into the container if not in development" . 734) (undo-tree-id1199 . -72) (undo-tree-id1200 . -72) (undo-tree-id1201 . -72) (undo-tree-id1202 . -72) (undo-tree-id1203 . -1) (undo-tree-id1204 . -71) (undo-tree-id1205 . -72) (undo-tree-id1206 . -72) (undo-tree-id1207 . -72) (undo-tree-id1208 . -72) (undo-tree-id1209 . -72) (undo-tree-id1210 . -72) (undo-tree-id1211 . -72) (undo-tree-id1212 . -72) (undo-tree-id1213 . -72) (undo-tree-id1214 . -72) (undo-tree-id1215 . -72) (undo-tree-id1216 . -72) (undo-tree-id1217 . -72) (undo-tree-id1218 . -72) (undo-tree-id1219 . -72) (undo-tree-id1220 . -72) (undo-tree-id1221 . -72) (undo-tree-id1222 . -72) (undo-tree-id1223 . -72) (undo-tree-id1224 . -72) (undo-tree-id1225 . -72) (undo-tree-id1226 . -72) (undo-tree-id1227 . -72) (undo-tree-id1228 . -72) (undo-tree-id1229 . -72) (undo-tree-id1230 . -72) (undo-tree-id1231 . -72) (undo-tree-id1232 . -72) (undo-tree-id1233 . -1) 735) nil (26367 32607 971151 590000) 0 nil])
([nil nil (("
" . -733) (undo-tree-id1164 . -1) (undo-tree-id1165 . -1) (undo-tree-id1166 . -1) (undo-tree-id1167 . -1) (undo-tree-id1168 . -1) (undo-tree-id1169 . -1) (undo-tree-id1170 . -1) (undo-tree-id1171 . -1) (undo-tree-id1172 . -1) (undo-tree-id1173 . -1) (undo-tree-id1174 . -1) (undo-tree-id1175 . -1) (undo-tree-id1176 . -1) (undo-tree-id1177 . -1) (undo-tree-id1178 . -1) (undo-tree-id1179 . -1) (undo-tree-id1180 . -1) (undo-tree-id1181 . -1) (undo-tree-id1182 . -1) (undo-tree-id1183 . -1) (undo-tree-id1184 . -1) (undo-tree-id1185 . -1) (undo-tree-id1186 . -1) (undo-tree-id1187 . -1) (undo-tree-id1188 . -1) (undo-tree-id1189 . -1) (undo-tree-id1190 . -1) (undo-tree-id1191 . -1) (undo-tree-id1192 . -1) (undo-tree-id1193 . -1) (undo-tree-id1194 . -1) (undo-tree-id1195 . -1) (undo-tree-id1196 . -1) (undo-tree-id1197 . -1) (undo-tree-id1198 . -1) 734) nil (26367 32607 971128 788000) 0 nil])
([nil nil (("
    fi" . 726) (undo-tree-id1129 . -7) (undo-tree-id1130 . -7) (undo-tree-id1131 . -7) (undo-tree-id1132 . -7) (undo-tree-id1133 . -1) (undo-tree-id1134 . -6) (undo-tree-id1135 . -7) (undo-tree-id1136 . -7) (undo-tree-id1137 . -7) (undo-tree-id1138 . -7) (undo-tree-id1139 . -7) (undo-tree-id1140 . -7) (undo-tree-id1141 . -7) (undo-tree-id1142 . -7) (undo-tree-id1143 . -7) (undo-tree-id1144 . -7) (undo-tree-id1145 . -7) (undo-tree-id1146 . -7) (undo-tree-id1147 . -7) (undo-tree-id1148 . -7) (undo-tree-id1149 . -7) (undo-tree-id1150 . -7) (undo-tree-id1151 . -7) (undo-tree-id1152 . -7) (undo-tree-id1153 . -7) (undo-tree-id1154 . -7) (undo-tree-id1155 . -7) (undo-tree-id1156 . -7) (undo-tree-id1157 . -7) (undo-tree-id1158 . -7) (undo-tree-id1159 . -7) (undo-tree-id1160 . -7) (undo-tree-id1161 . -7) (undo-tree-id1162 . -7) (undo-tree-id1163 . -1) 727) nil (26367 32607 971105 655000) 0 nil])
([nil nil (("
      echo \"Skipping certificate generation for production.\" ; \\" . 661) (undo-tree-id1094 . -65) (undo-tree-id1095 . -65) (undo-tree-id1096 . -65) (undo-tree-id1097 . -65) (undo-tree-id1098 . -1) (undo-tree-id1099 . -64) (undo-tree-id1100 . -65) (undo-tree-id1101 . -65) (undo-tree-id1102 . -65) (undo-tree-id1103 . -65) (undo-tree-id1104 . -65) (undo-tree-id1105 . -65) (undo-tree-id1106 . -65) (undo-tree-id1107 . -65) (undo-tree-id1108 . -65) (undo-tree-id1109 . -65) (undo-tree-id1110 . -65) (undo-tree-id1111 . -65) (undo-tree-id1112 . -65) (undo-tree-id1113 . -65) (undo-tree-id1114 . -65) (undo-tree-id1115 . -65) (undo-tree-id1116 . -65) (undo-tree-id1117 . -65) (undo-tree-id1118 . -65) (undo-tree-id1119 . -65) (undo-tree-id1120 . -65) (undo-tree-id1121 . -65) (undo-tree-id1122 . -65) (undo-tree-id1123 . -65) (undo-tree-id1124 . -65) (undo-tree-id1125 . -65) (undo-tree-id1126 . -65) (undo-tree-id1127 . -65) (undo-tree-id1128 . -1) 662) nil (26367 32607 971081 724000) 0 nil])
([nil nil (("
    else \\" . 650) (undo-tree-id1059 . -11) (undo-tree-id1060 . -11) (undo-tree-id1061 . -11) (undo-tree-id1062 . -11) (undo-tree-id1063 . -1) (undo-tree-id1064 . -10) (undo-tree-id1065 . -11) (undo-tree-id1066 . -11) (undo-tree-id1067 . -11) (undo-tree-id1068 . -11) (undo-tree-id1069 . -11) (undo-tree-id1070 . -11) (undo-tree-id1071 . -11) (undo-tree-id1072 . -11) (undo-tree-id1073 . -11) (undo-tree-id1074 . -11) (undo-tree-id1075 . -11) (undo-tree-id1076 . -11) (undo-tree-id1077 . -11) (undo-tree-id1078 . -11) (undo-tree-id1079 . -11) (undo-tree-id1080 . -11) (undo-tree-id1081 . -11) (undo-tree-id1082 . -11) (undo-tree-id1083 . -11) (undo-tree-id1084 . -11) (undo-tree-id1085 . -11) (undo-tree-id1086 . -11) (undo-tree-id1087 . -11) (undo-tree-id1088 . -11) (undo-tree-id1089 . -11) (undo-tree-id1090 . -11) (undo-tree-id1091 . -11) (undo-tree-id1092 . -11) (undo-tree-id1093 . -1) 651) nil (26367 32607 971059 804000) 0 nil])
([nil nil (("
      openssl req -nodes -new -x509 -keyout /etc/ssl/private/server.key -out /etc/ssl/certs/server.cert -days 365 -subj \"/C=US/ST=California/L=San Francisco/O=MyOrg/OU=MyUnit/CN=localhost\"; \\" . 458) (undo-tree-id1024 . -192) (undo-tree-id1025 . -192) (undo-tree-id1026 . -192) (undo-tree-id1027 . -192) (undo-tree-id1028 . -1) (undo-tree-id1029 . -191) (undo-tree-id1030 . -192) (undo-tree-id1031 . -192) (undo-tree-id1032 . -192) (undo-tree-id1033 . -192) (undo-tree-id1034 . -192) (undo-tree-id1035 . -192) (undo-tree-id1036 . -192) (undo-tree-id1037 . -192) (undo-tree-id1038 . -192) (undo-tree-id1039 . -192) (undo-tree-id1040 . -192) (undo-tree-id1041 . -192) (undo-tree-id1042 . -192) (undo-tree-id1043 . -192) (undo-tree-id1044 . -192) (undo-tree-id1045 . -192) (undo-tree-id1046 . -192) (undo-tree-id1047 . -192) (undo-tree-id1048 . -192) (undo-tree-id1049 . -192) (undo-tree-id1050 . -192) (undo-tree-id1051 . -192) (undo-tree-id1052 . -192) (undo-tree-id1053 . -192) (undo-tree-id1054 . -192) (undo-tree-id1055 . -192) (undo-tree-id1056 . -192) (undo-tree-id1057 . -192) (undo-tree-id1058 . -1) 459) nil (26367 32607 971035 962000) 0 nil])
([nil nil (("
      apk add --no-cache openssl && \\" . 420) (undo-tree-id989 . -38) (undo-tree-id990 . -38) (undo-tree-id991 . -38) (undo-tree-id992 . -38) (undo-tree-id993 . -1) (undo-tree-id994 . -37) (undo-tree-id995 . -38) (undo-tree-id996 . -38) (undo-tree-id997 . -38) (undo-tree-id998 . -38) (undo-tree-id999 . -38) (undo-tree-id1000 . -38) (undo-tree-id1001 . -38) (undo-tree-id1002 . -38) (undo-tree-id1003 . -38) (undo-tree-id1004 . -38) (undo-tree-id1005 . -38) (undo-tree-id1006 . -38) (undo-tree-id1007 . -38) (undo-tree-id1008 . -38) (undo-tree-id1009 . -38) (undo-tree-id1010 . -38) (undo-tree-id1011 . -38) (undo-tree-id1012 . -38) (undo-tree-id1013 . -38) (undo-tree-id1014 . -38) (undo-tree-id1015 . -38) (undo-tree-id1016 . -38) (undo-tree-id1017 . -38) (undo-tree-id1018 . -38) (undo-tree-id1019 . -38) (undo-tree-id1020 . -38) (undo-tree-id1021 . -38) (undo-tree-id1022 . -38) (undo-tree-id1023 . -1) 421) nil (26367 32607 971012 173000) 0 nil])
([nil nil (("
RUN if [ \"$ENV\" = \"development\" ]; then \\" . 378) (undo-tree-id954 . -42) (undo-tree-id955 . -42) (undo-tree-id956 . -42) (undo-tree-id957 . -42) (undo-tree-id958 . -1) (undo-tree-id959 . -41) (undo-tree-id960 . -42) (undo-tree-id961 . -42) (undo-tree-id962 . -42) (undo-tree-id963 . -42) (undo-tree-id964 . -42) (undo-tree-id965 . -42) (undo-tree-id966 . -42) (undo-tree-id967 . -42) (undo-tree-id968 . -42) (undo-tree-id969 . -42) (undo-tree-id970 . -42) (undo-tree-id971 . -42) (undo-tree-id972 . -42) (undo-tree-id973 . -42) (undo-tree-id974 . -42) (undo-tree-id975 . -42) (undo-tree-id976 . -42) (undo-tree-id977 . -42) (undo-tree-id978 . -42) (undo-tree-id979 . -42) (undo-tree-id980 . -42) (undo-tree-id981 . -42) (undo-tree-id982 . -42) (undo-tree-id983 . -42) (undo-tree-id984 . -42) (undo-tree-id985 . -42) (undo-tree-id986 . -42) (undo-tree-id987 . -42) (undo-tree-id988 . -1) 379) nil (26367 32607 970990 308000) 0 nil])
([nil nil (("
# Generate self-signed certificates for development" . 326) (undo-tree-id919 . -52) (undo-tree-id920 . -52) (undo-tree-id921 . -52) (undo-tree-id922 . -52) (undo-tree-id923 . -1) (undo-tree-id924 . -51) (undo-tree-id925 . -52) (undo-tree-id926 . -52) (undo-tree-id927 . -52) (undo-tree-id928 . -52) (undo-tree-id929 . -52) (undo-tree-id930 . -52) (undo-tree-id931 . -52) (undo-tree-id932 . -52) (undo-tree-id933 . -52) (undo-tree-id934 . -52) (undo-tree-id935 . -52) (undo-tree-id936 . -52) (undo-tree-id937 . -52) (undo-tree-id938 . -52) (undo-tree-id939 . -52) (undo-tree-id940 . -52) (undo-tree-id941 . -52) (undo-tree-id942 . -52) (undo-tree-id943 . -52) (undo-tree-id944 . -52) (undo-tree-id945 . -52) (undo-tree-id946 . -52) (undo-tree-id947 . -52) (undo-tree-id948 . -52) (undo-tree-id949 . -52) (undo-tree-id950 . -52) (undo-tree-id951 . -52) (undo-tree-id952 . -52) (undo-tree-id953 . -1) 327) nil (26367 32607 970967 476000) 0 nil])
([nil nil (("
" . -325) (undo-tree-id879 . -1) (undo-tree-id880 . -1) (undo-tree-id881 . -1) (undo-tree-id882 . -1) (undo-tree-id883 . -1) (undo-tree-id884 . -1) (undo-tree-id885 . -1) (undo-tree-id886 . -1) (undo-tree-id887 . -1) (undo-tree-id888 . -1) (undo-tree-id889 . -1) (undo-tree-id890 . -1) (undo-tree-id891 . -1) (undo-tree-id892 . -1) (undo-tree-id893 . -1) (undo-tree-id894 . -1) (undo-tree-id895 . -1) (undo-tree-id896 . -1) (undo-tree-id897 . -1) (undo-tree-id898 . -1) (undo-tree-id899 . -1) (undo-tree-id900 . -1) (undo-tree-id901 . -1) (undo-tree-id902 . -1) (undo-tree-id903 . -1) (undo-tree-id904 . -1) (undo-tree-id905 . -1) (undo-tree-id906 . -1) (undo-tree-id907 . -1) (undo-tree-id908 . -1) (undo-tree-id909 . -1) (undo-tree-id910 . -1) (undo-tree-id911 . -1) (undo-tree-id912 . -1) (undo-tree-id913 . -1) (undo-tree-id914 . -1) (undo-tree-id915 . -1) (undo-tree-id916 . -1) (undo-tree-id917 . -1) (undo-tree-id918 . -1) 326) nil (26367 32607 970943 846000) 0 nil])
([nil nil (("
ARG ENV=development" . 305) (undo-tree-id839 . -20) (undo-tree-id840 . -20) (undo-tree-id841 . -20) (undo-tree-id842 . -20) (undo-tree-id843 . -1) (undo-tree-id844 . -19) (undo-tree-id845 . -20) (undo-tree-id846 . -20) (undo-tree-id847 . -20) (undo-tree-id848 . -20) (undo-tree-id849 . -20) (undo-tree-id850 . -20) (undo-tree-id851 . -20) (undo-tree-id852 . -20) (undo-tree-id853 . -20) (undo-tree-id854 . -20) (undo-tree-id855 . -20) (undo-tree-id856 . -20) (undo-tree-id857 . -20) (undo-tree-id858 . -20) (undo-tree-id859 . -20) (undo-tree-id860 . -20) (undo-tree-id861 . -20) (undo-tree-id862 . -20) (undo-tree-id863 . -20) (undo-tree-id864 . -20) (undo-tree-id865 . -20) (undo-tree-id866 . -20) (undo-tree-id867 . -20) (undo-tree-id868 . -20) (undo-tree-id869 . -20) (undo-tree-id870 . -20) (undo-tree-id871 . -20) (undo-tree-id872 . -20) (undo-tree-id873 . -20) (undo-tree-id874 . -20) (undo-tree-id875 . -20) (undo-tree-id876 . -20) (undo-tree-id877 . -20) (undo-tree-id878 . -1) 306) nil (26367 32607 970917 552000) 0 nil])
([nil nil (("
# Define build argument to determine environment" . 256) (undo-tree-id799 . -49) (undo-tree-id800 . -49) (undo-tree-id801 . -49) (undo-tree-id802 . -49) (undo-tree-id803 . -1) (undo-tree-id804 . -48) (undo-tree-id805 . -49) (undo-tree-id806 . -49) (undo-tree-id807 . -49) (undo-tree-id808 . -49) (undo-tree-id809 . -49) (undo-tree-id810 . -49) (undo-tree-id811 . -49) (undo-tree-id812 . -49) (undo-tree-id813 . -49) (undo-tree-id814 . -49) (undo-tree-id815 . -49) (undo-tree-id816 . -49) (undo-tree-id817 . -49) (undo-tree-id818 . -49) (undo-tree-id819 . -49) (undo-tree-id820 . -49) (undo-tree-id821 . -49) (undo-tree-id822 . -49) (undo-tree-id823 . -49) (undo-tree-id824 . -49) (undo-tree-id825 . -49) (undo-tree-id826 . -49) (undo-tree-id827 . -49) (undo-tree-id828 . -49) (undo-tree-id829 . -49) (undo-tree-id830 . -49) (undo-tree-id831 . -49) (undo-tree-id832 . -49) (undo-tree-id833 . -49) (undo-tree-id834 . -49) (undo-tree-id835 . -49) (undo-tree-id836 . -49) (undo-tree-id837 . -49) (undo-tree-id838 . -1) 257) nil (26367 32607 970878 89000) 0 nil])
([nil nil (("
" . -255) (undo-tree-id759 . -1) (undo-tree-id760 . -1) (undo-tree-id761 . -1) (undo-tree-id762 . -1) (undo-tree-id763 . -1) (undo-tree-id764 . -1) (undo-tree-id765 . -1) (undo-tree-id766 . -1) (undo-tree-id767 . -1) (undo-tree-id768 . -1) (undo-tree-id769 . -1) (undo-tree-id770 . -1) (undo-tree-id771 . -1) (undo-tree-id772 . -1) (undo-tree-id773 . -1) (undo-tree-id774 . -1) (undo-tree-id775 . -1) (undo-tree-id776 . -1) (undo-tree-id777 . -1) (undo-tree-id778 . -1) (undo-tree-id779 . -1) (undo-tree-id780 . -1) (undo-tree-id781 . -1) (undo-tree-id782 . -1) (undo-tree-id783 . -1) (undo-tree-id784 . -1) (undo-tree-id785 . -1) (undo-tree-id786 . -1) (undo-tree-id787 . -1) (undo-tree-id788 . -1) (undo-tree-id789 . -1) (undo-tree-id790 . -1) (undo-tree-id791 . -1) (undo-tree-id792 . -1) (undo-tree-id793 . -1) (undo-tree-id794 . -1) (undo-tree-id795 . -1) (undo-tree-id796 . -1) (undo-tree-id797 . -1) (undo-tree-id798 . -1) 256) nil (26367 32607 970851 482000) 0 nil])
([nil nil (("
COPY . ." . 246) (undo-tree-id718 . -9) (undo-tree-id719 . -9) (undo-tree-id720 . -9) (undo-tree-id721 . -9) (undo-tree-id722 . -1) (undo-tree-id723 . -8) (undo-tree-id724 . -9) (undo-tree-id725 . -9) (undo-tree-id726 . -1) (undo-tree-id727 . -9) (undo-tree-id728 . -9) (undo-tree-id729 . -9) (undo-tree-id730 . -9) (undo-tree-id731 . -9) (undo-tree-id732 . -9) (undo-tree-id733 . -9) (undo-tree-id734 . -9) (undo-tree-id735 . -9) (undo-tree-id736 . -9) (undo-tree-id737 . -9) (undo-tree-id738 . -9) (undo-tree-id739 . -9) (undo-tree-id740 . -9) (undo-tree-id741 . -9) (undo-tree-id742 . -9) (undo-tree-id743 . -9) (undo-tree-id744 . -9) (undo-tree-id745 . -9) (undo-tree-id746 . -9) (undo-tree-id747 . -9) (undo-tree-id748 . -9) (undo-tree-id749 . -9) (undo-tree-id750 . -9) (undo-tree-id751 . -9) (undo-tree-id752 . -9) (undo-tree-id753 . -9) (undo-tree-id754 . -9) (undo-tree-id755 . -9) (undo-tree-id756 . -9) (undo-tree-id757 . -9) (undo-tree-id758 . -1) 247) nil (26367 32607 970824 595000) 0 nil])
([nil nil (("
# Copy the rest of your application code" . 205) (undo-tree-id678 . -41) (undo-tree-id679 . -41) (undo-tree-id680 . -41) (undo-tree-id681 . -41) (undo-tree-id682 . -1) (undo-tree-id683 . -40) (undo-tree-id684 . -41) (undo-tree-id685 . -41) (undo-tree-id686 . -41) (undo-tree-id687 . -41) (undo-tree-id688 . -41) (undo-tree-id689 . -41) (undo-tree-id690 . -41) (undo-tree-id691 . -41) (undo-tree-id692 . -41) (undo-tree-id693 . -41) (undo-tree-id694 . -41) (undo-tree-id695 . -41) (undo-tree-id696 . -41) (undo-tree-id697 . -41) (undo-tree-id698 . -41) (undo-tree-id699 . -41) (undo-tree-id700 . -41) (undo-tree-id701 . -41) (undo-tree-id702 . -41) (undo-tree-id703 . -41) (undo-tree-id704 . -41) (undo-tree-id705 . -41) (undo-tree-id706 . -41) (undo-tree-id707 . -41) (undo-tree-id708 . -41) (undo-tree-id709 . -41) (undo-tree-id710 . -41) (undo-tree-id711 . -41) (undo-tree-id712 . -41) (undo-tree-id713 . -41) (undo-tree-id714 . -41) (undo-tree-id715 . -41) (undo-tree-id716 . -41) (undo-tree-id717 . -1) 206) nil (26367 32607 970796 902000) 0 nil])
([nil nil (("
" . -204) (undo-tree-id638 . -1) (undo-tree-id639 . -1) (undo-tree-id640 . -1) (undo-tree-id641 . -1) (undo-tree-id642 . -1) (undo-tree-id643 . -1) (undo-tree-id644 . -1) (undo-tree-id645 . -1) (undo-tree-id646 . -1) (undo-tree-id647 . -1) (undo-tree-id648 . -1) (undo-tree-id649 . -1) (undo-tree-id650 . -1) (undo-tree-id651 . -1) (undo-tree-id652 . -1) (undo-tree-id653 . -1) (undo-tree-id654 . -1) (undo-tree-id655 . -1) (undo-tree-id656 . -1) (undo-tree-id657 . -1) (undo-tree-id658 . -1) (undo-tree-id659 . -1) (undo-tree-id660 . -1) (undo-tree-id661 . -1) (undo-tree-id662 . -1) (undo-tree-id663 . -1) (undo-tree-id664 . -1) (undo-tree-id665 . -1) (undo-tree-id666 . -1) (undo-tree-id667 . -1) (undo-tree-id668 . -1) (undo-tree-id669 . -1) (undo-tree-id670 . -1) (undo-tree-id671 . -1) (undo-tree-id672 . -1) (undo-tree-id673 . -1) (undo-tree-id674 . -1) (undo-tree-id675 . -1) (undo-tree-id676 . -1) (undo-tree-id677 . -1) 205) nil (26367 32607 970770 228000) 0 nil])
([nil nil (("
RUN npm install" . 188) (undo-tree-id598 . -16) (undo-tree-id599 . -16) (undo-tree-id600 . -16) (undo-tree-id601 . -16) (undo-tree-id602 . -1) (undo-tree-id603 . -15) (undo-tree-id604 . -16) (undo-tree-id605 . -16) (undo-tree-id606 . -16) (undo-tree-id607 . -16) (undo-tree-id608 . -16) (undo-tree-id609 . -16) (undo-tree-id610 . -16) (undo-tree-id611 . -16) (undo-tree-id612 . -16) (undo-tree-id613 . -16) (undo-tree-id614 . -16) (undo-tree-id615 . -16) (undo-tree-id616 . -16) (undo-tree-id617 . -16) (undo-tree-id618 . -16) (undo-tree-id619 . -16) (undo-tree-id620 . -16) (undo-tree-id621 . -16) (undo-tree-id622 . -16) (undo-tree-id623 . -16) (undo-tree-id624 . -16) (undo-tree-id625 . -16) (undo-tree-id626 . -16) (undo-tree-id627 . -16) (undo-tree-id628 . -16) (undo-tree-id629 . -16) (undo-tree-id630 . -16) (undo-tree-id631 . -16) (undo-tree-id632 . -16) (undo-tree-id633 . -16) (undo-tree-id634 . -16) (undo-tree-id635 . -16) (undo-tree-id636 . -16) (undo-tree-id637 . -1) 189) nil (26367 32607 970744 308000) 0 nil])
([nil nil (("
# Install dependencies" . 165) (undo-tree-id558 . -23) (undo-tree-id559 . -23) (undo-tree-id560 . -23) (undo-tree-id561 . -23) (undo-tree-id562 . -1) (undo-tree-id563 . -22) (undo-tree-id564 . -23) (undo-tree-id565 . -23) (undo-tree-id566 . -23) (undo-tree-id567 . -23) (undo-tree-id568 . -23) (undo-tree-id569 . -23) (undo-tree-id570 . -23) (undo-tree-id571 . -23) (undo-tree-id572 . -23) (undo-tree-id573 . -23) (undo-tree-id574 . -23) (undo-tree-id575 . -23) (undo-tree-id576 . -23) (undo-tree-id577 . -23) (undo-tree-id578 . -23) (undo-tree-id579 . -23) (undo-tree-id580 . -23) (undo-tree-id581 . -23) (undo-tree-id582 . -23) (undo-tree-id583 . -23) (undo-tree-id584 . -23) (undo-tree-id585 . -23) (undo-tree-id586 . -23) (undo-tree-id587 . -23) (undo-tree-id588 . -23) (undo-tree-id589 . -23) (undo-tree-id590 . -23) (undo-tree-id591 . -23) (undo-tree-id592 . -23) (undo-tree-id593 . -23) (undo-tree-id594 . -23) (undo-tree-id595 . -23) (undo-tree-id596 . -23) (undo-tree-id597 . -1) 166) nil (26367 32607 970707 585000) 0 nil])
([nil nil (("
" . -164) (undo-tree-id518 . -1) (undo-tree-id519 . -1) (undo-tree-id520 . -1) (undo-tree-id521 . -1) (undo-tree-id522 . -1) (undo-tree-id523 . -1) (undo-tree-id524 . -1) (undo-tree-id525 . -1) (undo-tree-id526 . -1) (undo-tree-id527 . -1) (undo-tree-id528 . -1) (undo-tree-id529 . -1) (undo-tree-id530 . -1) (undo-tree-id531 . -1) (undo-tree-id532 . -1) (undo-tree-id533 . -1) (undo-tree-id534 . -1) (undo-tree-id535 . -1) (undo-tree-id536 . -1) (undo-tree-id537 . -1) (undo-tree-id538 . -1) (undo-tree-id539 . -1) (undo-tree-id540 . -1) (undo-tree-id541 . -1) (undo-tree-id542 . -1) (undo-tree-id543 . -1) (undo-tree-id544 . -1) (undo-tree-id545 . -1) (undo-tree-id546 . -1) (undo-tree-id547 . -1) (undo-tree-id548 . -1) (undo-tree-id549 . -1) (undo-tree-id550 . -1) (undo-tree-id551 . -1) (undo-tree-id552 . -1) (undo-tree-id553 . -1) (undo-tree-id554 . -1) (undo-tree-id555 . -1) (undo-tree-id556 . -1) (undo-tree-id557 . -1) 165) nil (26367 32607 970680 605000) 0 nil])
([nil nil (("
COPY package*.json ./" . 142) (undo-tree-id478 . -22) (undo-tree-id479 . -22) (undo-tree-id480 . -22) (undo-tree-id481 . -22) (undo-tree-id482 . -1) (undo-tree-id483 . -21) (undo-tree-id484 . -22) (undo-tree-id485 . -22) (undo-tree-id486 . -22) (undo-tree-id487 . -22) (undo-tree-id488 . -22) (undo-tree-id489 . -22) (undo-tree-id490 . -22) (undo-tree-id491 . -22) (undo-tree-id492 . -22) (undo-tree-id493 . -22) (undo-tree-id494 . -22) (undo-tree-id495 . -22) (undo-tree-id496 . -22) (undo-tree-id497 . -22) (undo-tree-id498 . -22) (undo-tree-id499 . -22) (undo-tree-id500 . -22) (undo-tree-id501 . -22) (undo-tree-id502 . -22) (undo-tree-id503 . -22) (undo-tree-id504 . -22) (undo-tree-id505 . -22) (undo-tree-id506 . -22) (undo-tree-id507 . -22) (undo-tree-id508 . -22) (undo-tree-id509 . -22) (undo-tree-id510 . -22) (undo-tree-id511 . -22) (undo-tree-id512 . -22) (undo-tree-id513 . -22) (undo-tree-id514 . -22) (undo-tree-id515 . -22) (undo-tree-id516 . -22) (undo-tree-id517 . -1) 143) nil (26367 32607 970654 199000) 0 nil])
([nil nil (("
# Copy package.json and package-lock.json" . 100) (undo-tree-id438 . -42) (undo-tree-id439 . -42) (undo-tree-id440 . -42) (undo-tree-id441 . -42) (undo-tree-id442 . -1) (undo-tree-id443 . -41) (undo-tree-id444 . -42) (undo-tree-id445 . -42) (undo-tree-id446 . -42) (undo-tree-id447 . -42) (undo-tree-id448 . -42) (undo-tree-id449 . -42) (undo-tree-id450 . -42) (undo-tree-id451 . -42) (undo-tree-id452 . -42) (undo-tree-id453 . -42) (undo-tree-id454 . -42) (undo-tree-id455 . -42) (undo-tree-id456 . -42) (undo-tree-id457 . -42) (undo-tree-id458 . -42) (undo-tree-id459 . -42) (undo-tree-id460 . -42) (undo-tree-id461 . -42) (undo-tree-id462 . -42) (undo-tree-id463 . -42) (undo-tree-id464 . -42) (undo-tree-id465 . -42) (undo-tree-id466 . -42) (undo-tree-id467 . -42) (undo-tree-id468 . -42) (undo-tree-id469 . -42) (undo-tree-id470 . -42) (undo-tree-id471 . -42) (undo-tree-id472 . -42) (undo-tree-id473 . -42) (undo-tree-id474 . -42) (undo-tree-id475 . -42) (undo-tree-id476 . -42) (undo-tree-id477 . -1) 101) nil (26367 32607 970628 638000) 0 nil])
([nil nil (("
" . -99) (undo-tree-id398 . -1) (undo-tree-id399 . -1) (undo-tree-id400 . -1) (undo-tree-id401 . -1) (undo-tree-id402 . -1) (undo-tree-id403 . -1) (undo-tree-id404 . -1) (undo-tree-id405 . -1) (undo-tree-id406 . -1) (undo-tree-id407 . -1) (undo-tree-id408 . -1) (undo-tree-id409 . -1) (undo-tree-id410 . -1) (undo-tree-id411 . -1) (undo-tree-id412 . -1) (undo-tree-id413 . -1) (undo-tree-id414 . -1) (undo-tree-id415 . -1) (undo-tree-id416 . -1) (undo-tree-id417 . -1) (undo-tree-id418 . -1) (undo-tree-id419 . -1) (undo-tree-id420 . -1) (undo-tree-id421 . -1) (undo-tree-id422 . -1) (undo-tree-id423 . -1) (undo-tree-id424 . -1) (undo-tree-id425 . -1) (undo-tree-id426 . -1) (undo-tree-id427 . -1) (undo-tree-id428 . -1) (undo-tree-id429 . -1) (undo-tree-id430 . -1) (undo-tree-id431 . -1) (undo-tree-id432 . -1) (undo-tree-id433 . -1) (undo-tree-id434 . -1) (undo-tree-id435 . -1) (undo-tree-id436 . -1) (undo-tree-id437 . -1) 100) nil (26367 32607 970593 918000) 0 nil])
([nil nil (("
WORKDIR /usr/src/app" . 78) (undo-tree-id357 . -21) (undo-tree-id358 . -21) (undo-tree-id359 . -21) (undo-tree-id360 . -21) (undo-tree-id361 . -1) (undo-tree-id362 . -20) (undo-tree-id363 . -21) (undo-tree-id364 . -21) (undo-tree-id365 . -1) (undo-tree-id366 . -21) (undo-tree-id367 . -21) (undo-tree-id368 . -21) (undo-tree-id369 . -21) (undo-tree-id370 . -21) (undo-tree-id371 . -21) (undo-tree-id372 . -21) (undo-tree-id373 . -21) (undo-tree-id374 . -21) (undo-tree-id375 . -21) (undo-tree-id376 . -21) (undo-tree-id377 . -21) (undo-tree-id378 . -21) (undo-tree-id379 . -21) (undo-tree-id380 . -21) (undo-tree-id381 . -21) (undo-tree-id382 . -21) (undo-tree-id383 . -21) (undo-tree-id384 . -21) (undo-tree-id385 . -21) (undo-tree-id386 . -21) (undo-tree-id387 . -21) (undo-tree-id388 . -21) (undo-tree-id389 . -21) (undo-tree-id390 . -21) (undo-tree-id391 . -21) (undo-tree-id392 . -21) (undo-tree-id393 . -21) (undo-tree-id394 . -21) (undo-tree-id395 . -21) (undo-tree-id396 . -21) (undo-tree-id397 . -1) 79) nil (26367 32607 970567 311000) 0 nil])
([nil nil (("
# Set working directory" . 54) (undo-tree-id317 . -24) (undo-tree-id318 . -24) (undo-tree-id319 . -24) (undo-tree-id320 . -24) (undo-tree-id321 . -1) (undo-tree-id322 . -23) (undo-tree-id323 . -24) (undo-tree-id324 . -24) (undo-tree-id325 . -24) (undo-tree-id326 . -24) (undo-tree-id327 . -24) (undo-tree-id328 . -24) (undo-tree-id329 . -24) (undo-tree-id330 . -24) (undo-tree-id331 . -24) (undo-tree-id332 . -24) (undo-tree-id333 . -24) (undo-tree-id334 . -24) (undo-tree-id335 . -24) (undo-tree-id336 . -24) (undo-tree-id337 . -24) (undo-tree-id338 . -24) (undo-tree-id339 . -24) (undo-tree-id340 . -24) (undo-tree-id341 . -24) (undo-tree-id342 . -24) (undo-tree-id343 . -24) (undo-tree-id344 . -24) (undo-tree-id345 . -24) (undo-tree-id346 . -24) (undo-tree-id347 . -24) (undo-tree-id348 . -24) (undo-tree-id349 . -24) (undo-tree-id350 . -24) (undo-tree-id351 . -24) (undo-tree-id352 . -24) (undo-tree-id353 . -24) (undo-tree-id354 . -24) (undo-tree-id355 . -24) (undo-tree-id356 . -1) 55) nil (26367 32607 970539 709000) 0 nil])
([nil nil (("
" . -53) (undo-tree-id277 . -1) (undo-tree-id278 . -1) (undo-tree-id279 . -1) (undo-tree-id280 . -1) (undo-tree-id281 . -1) (undo-tree-id282 . -1) (undo-tree-id283 . -1) (undo-tree-id284 . -1) (undo-tree-id285 . -1) (undo-tree-id286 . -1) (undo-tree-id287 . -1) (undo-tree-id288 . -1) (undo-tree-id289 . -1) (undo-tree-id290 . -1) (undo-tree-id291 . -1) (undo-tree-id292 . -1) (undo-tree-id293 . -1) (undo-tree-id294 . -1) (undo-tree-id295 . -1) (undo-tree-id296 . -1) (undo-tree-id297 . -1) (undo-tree-id298 . -1) (undo-tree-id299 . -1) (undo-tree-id300 . -1) (undo-tree-id301 . -1) (undo-tree-id302 . -1) (undo-tree-id303 . -1) (undo-tree-id304 . -1) (undo-tree-id305 . -1) (undo-tree-id306 . -1) (undo-tree-id307 . -1) (undo-tree-id308 . -1) (undo-tree-id309 . -1) (undo-tree-id310 . -1) (undo-tree-id311 . -1) (undo-tree-id312 . -1) (undo-tree-id313 . -1) (undo-tree-id314 . -1) (undo-tree-id315 . -1) (undo-tree-id316 . -1) 54) nil (26367 32607 970502 70000) 0 nil])
([nil nil (("
FROM node:18-alpine" . 33) (undo-tree-id237 . -20) (undo-tree-id238 . -20) (undo-tree-id239 . -20) (undo-tree-id240 . -20) (undo-tree-id241 . -1) (undo-tree-id242 . -19) (undo-tree-id243 . -20) (undo-tree-id244 . -20) (undo-tree-id245 . -20) (undo-tree-id246 . -20) (undo-tree-id247 . -20) (undo-tree-id248 . -20) (undo-tree-id249 . -20) (undo-tree-id250 . -20) (undo-tree-id251 . -20) (undo-tree-id252 . -20) (undo-tree-id253 . -20) (undo-tree-id254 . -20) (undo-tree-id255 . -20) (undo-tree-id256 . -20) (undo-tree-id257 . -20) (undo-tree-id258 . -20) (undo-tree-id259 . -20) (undo-tree-id260 . -20) (undo-tree-id261 . -20) (undo-tree-id262 . -20) (undo-tree-id263 . -20) (undo-tree-id264 . -20) (undo-tree-id265 . -20) (undo-tree-id266 . -20) (undo-tree-id267 . -20) (undo-tree-id268 . -20) (undo-tree-id269 . -20) (undo-tree-id270 . -20) (undo-tree-id271 . -20) (undo-tree-id272 . -20) (undo-tree-id273 . -20) (undo-tree-id274 . -20) (undo-tree-id275 . -20) (undo-tree-id276 . -1) 34) nil (26367 32669 379853 119000) 0 nil])
([nil nil (("# Use the official Node.js image" . 1) (undo-tree-id1656 . -32) (undo-tree-id1657 . -32) (undo-tree-id1658 . -32) (undo-tree-id1659 . -32) (undo-tree-id1660 . -31) (undo-tree-id1661 . -32) (undo-tree-id1662 . -32) (undo-tree-id1663 . -32) (undo-tree-id1664 . -32) (undo-tree-id1665 . -32) (undo-tree-id1666 . -32) (undo-tree-id1667 . -32) (undo-tree-id1668 . -32) (undo-tree-id1669 . -32) (undo-tree-id1670 . -32) (undo-tree-id1671 . -32) (undo-tree-id1672 . -32) (undo-tree-id1673 . -32) (undo-tree-id1674 . -32) (undo-tree-id1675 . -32) (undo-tree-id1676 . -32) (undo-tree-id1677 . -32) (undo-tree-id1678 . -32) (undo-tree-id1679 . -32) (undo-tree-id1680 . -32) (undo-tree-id1681 . -32) (undo-tree-id1682 . -32) (undo-tree-id1683 . -32) (undo-tree-id1684 . -32) (undo-tree-id1685 . -32) (undo-tree-id1686 . -32) (undo-tree-id1687 . -32) (undo-tree-id1688 . -32) (undo-tree-id1689 . -32) (undo-tree-id1690 . -32) (undo-tree-id1691 . -19) (undo-tree-id1692 . -32) (undo-tree-id1693 . -32)) ((1 . 33)) (26367 32671 493417 847000) 0 nil])
([nil current ((1 . 1098)) (("# Use the official Node.js image
FROM node:18-alpine

# Set working directory
WORKDIR /usr/src/app

# Copy package.json and package-lock.json
COPY package*.json ./

# Install dependencies
RUN npm install

# Copy the rest of your application code
COPY . .

# Define build argument to determine environment
ARG ENV=development

# Generate self-signed certificates for development
RUN if [ \"$ENV\" = \"development\" ]; then \\
      apk add --no-cache openssl && \\
      openssl req -nodes -new -x509 -keyout /etc/ssl/private/server.key -out /etc/ssl/certs/server.cert -days 365 -subj \"/C=US/ST=California/L=San Francisco/O=MyOrg/OU=MyUnit/CN=localhost\"; \\
    else \\
      echo \"Skipping certificate generation for production.\" ; \\
    fi

# Copy production certificates into the container if not in development
COPY path/to/your/server.cert /etc/ssl/certs/server.cert || echo \"No production certificates provided.\"
COPY path/to/your/server.key /etc/ssl/private/server.key || echo \"No production key provided.\"

# Expose the HTTPS port
EXPOSE 443

# Start the Node.js application
CMD [\"node\", \"app.js\"]
" . 1) (undo-tree-id1537 . -417) (undo-tree-id1538 . -1096) (undo-tree-id1539 . -723) (undo-tree-id1540 . -724) (undo-tree-id1541 . -204) (undo-tree-id1542 . -725) (undo-tree-id1543 . -659) (undo-tree-id1544 . -454) (undo-tree-id1545 . -454) (undo-tree-id1546 . -454) (undo-tree-id1547 . -454) (undo-tree-id1548 . -454) (undo-tree-id1549 . -454) (undo-tree-id1550 . -454) (undo-tree-id1551 . -454) (undo-tree-id1552 . -454) (undo-tree-id1553 . -454) (undo-tree-id1554 . -454) (undo-tree-id1555 . -454) (undo-tree-id1556 . -454) (undo-tree-id1557 . -454) (undo-tree-id1558 . -454) (undo-tree-id1559 . -454) (undo-tree-id1560 . -454) (undo-tree-id1561 . -454) (undo-tree-id1562 . -454) (undo-tree-id1563 . -454) (undo-tree-id1564 . -454) (undo-tree-id1565 . -454) (undo-tree-id1566 . -454) (undo-tree-id1567 . -454) (undo-tree-id1568 . -454) (undo-tree-id1569 . -454) (undo-tree-id1570 . -454) (undo-tree-id1571 . -454) (undo-tree-id1572 . -454) (undo-tree-id1573 . -454) (undo-tree-id1574 . -454) (undo-tree-id1575 . -454) (undo-tree-id1576 . -454) (undo-tree-id1577 . -454) (undo-tree-id1578 . -454) (undo-tree-id1579 . -454) (undo-tree-id1580 . -454) (undo-tree-id1581 . -454) (undo-tree-id1582 . -454) (undo-tree-id1583 . -454) (undo-tree-id1584 . -454) (undo-tree-id1585 . -454) (undo-tree-id1586 . -454) (undo-tree-id1587 . -454) (undo-tree-id1588 . -658) (undo-tree-id1589 . -454) (undo-tree-id1590 . -723) (undo-tree-id1591 . -723) (undo-tree-id1592 . -723) (undo-tree-id1593 . -723) (undo-tree-id1594 . -723) (undo-tree-id1595 . -723) (undo-tree-id1596 . -723) (undo-tree-id1597 . -723) (undo-tree-id1598 . -723) (undo-tree-id1599 . -723) (undo-tree-id1600 . -723) (undo-tree-id1601 . -723) (undo-tree-id1602 . -723) (undo-tree-id1603 . -723) (undo-tree-id1604 . -723) (undo-tree-id1605 . -723) (undo-tree-id1606 . -723) (undo-tree-id1607 . -454) (undo-tree-id1608 . -723) (undo-tree-id1609 . -658) (undo-tree-id1610 . -658) (undo-tree-id1611 . -658) (undo-tree-id1612 . -658) (undo-tree-id1613 . -658) (undo-tree-id1614 . -658) (undo-tree-id1615 . -658) (undo-tree-id1616 . -723) (undo-tree-id1617 . -658) (undo-tree-id1618 . -647) (undo-tree-id1619 . -647) (undo-tree-id1620 . -647) (undo-tree-id1621 . -647) (undo-tree-id1622 . -647) (undo-tree-id1623 . -647) (undo-tree-id1624 . -647) (undo-tree-id1625 . -658) (undo-tree-id1626 . -647) (undo-tree-id1627 . -648) (undo-tree-id1628 . -648) (undo-tree-id1629 . -648) (undo-tree-id1630 . -648) (undo-tree-id1631 . -648) (undo-tree-id1632 . -648) (undo-tree-id1633 . -648) (undo-tree-id1634 . -647) (undo-tree-id1635 . -648) (undo-tree-id1636 . -455) (undo-tree-id1637 . -455) (undo-tree-id1638 . -455) (undo-tree-id1639 . -455) (undo-tree-id1640 . -455) (undo-tree-id1641 . -455) (undo-tree-id1642 . -455) (undo-tree-id1643 . -648) (undo-tree-id1644 . -455) (undo-tree-id1645 . -417) (undo-tree-id1646 . -417) (undo-tree-id1647 . -417) (undo-tree-id1648 . -417) (undo-tree-id1649 . -454) (undo-tree-id1650 . -417) (undo-tree-id1651 . -417) (undo-tree-id1652 . -417) (undo-tree-id1653 . -417) (undo-tree-id1654 . -455) (undo-tree-id1655 . -417)) (26367 32671 957744 84000) 0 nil])
([nil nil ((" \\" . 418) (undo-tree-id1424 . -1) (undo-tree-id1426 . -1) (undo-tree-id1428 . -1) (undo-tree-id1430 . -1) (undo-tree-id1432 . -1) (undo-tree-id1434 . -1) (undo-tree-id1436 . -1) (undo-tree-id1438 . -1) (undo-tree-id1440 . -1) (undo-tree-id1442 . -2) (t 26367 32608 33877 456000)) ((418 . 420)) (26367 32669 289568 964000) 0 nil])
([nil nil ((" \\" . 454) (undo-tree-id1397 . -1) (undo-tree-id1399 . -1) (undo-tree-id1401 . -1) (undo-tree-id1403 . -1) (undo-tree-id1405 . -1) (undo-tree-id1407 . -1) (undo-tree-id1409 . -1) (undo-tree-id1411 . -1) (undo-tree-id1413 . -1) (undo-tree-id1415 . -1) (undo-tree-id1417 . -1) (undo-tree-id1419 . -1) (undo-tree-id1421 . -1) (undo-tree-id1423 . -2)) ((454 . 456)) (26367 32669 258940 652000) 0 nil])
([nil nil (("\\" . 645) (undo-tree-id1536 . -1)) ((645 . 646)) (26367 32669 228653 776000) 0 nil] [nil nil (("      openssl req -nodes -new -x509 -keyout /etc/ssl/private/server.key -out /etc/ssl/certs/server.cert -days 365 -subj \"/C=US/ST=California/L=San Francisco/O=MyOrg/OU=MyUnit/CN=localhost\"; \\
" . 455) (undo-tree-id1300 . -191) (undo-tree-id1301 . -157) (undo-tree-id1302 . -157) (undo-tree-id1303 . -157) (undo-tree-id1304 . -157) (undo-tree-id1305 . -157) (undo-tree-id1306 . -157) (undo-tree-id1307 . -157) (undo-tree-id1308 . -62) (undo-tree-id1309 . -62) (undo-tree-id1310 . -62) (undo-tree-id1311 . -62) (undo-tree-id1312 . -62) (undo-tree-id1313 . -62) (undo-tree-id1314 . -62) (undo-tree-id1315 . -62) (undo-tree-id1316 . -62) (undo-tree-id1317 . -62) (undo-tree-id1318 . -62) (undo-tree-id1319 . -62) (undo-tree-id1320 . -34) (undo-tree-id1321 . -34) (undo-tree-id1322 . -34) (undo-tree-id1323 . -34) (undo-tree-id1324 . -34) (undo-tree-id1325 . -34) (undo-tree-id1326 . -34) (undo-tree-id1327 . -34) (undo-tree-id1328 . -34) (undo-tree-id1329 . -34) (undo-tree-id1330 . -34) (undo-tree-id1331 . -34) (undo-tree-id1332 . -129) (undo-tree-id1333 . -129) (undo-tree-id1334 . -129) (undo-tree-id1335 . -129) (undo-tree-id1336 . -129) (undo-tree-id1337 . -129) (undo-tree-id1338 . -129) (undo-tree-id1339 . -129) (undo-tree-id1340 . -129) (undo-tree-id1341 . -129) (undo-tree-id1342 . -129) (undo-tree-id1343 . -129) (undo-tree-id1344 . -129) (undo-tree-id1345 . -129) (undo-tree-id1346 . -129) (undo-tree-id1347 . -129) (undo-tree-id1348 . -129) (undo-tree-id1349 . -129) (undo-tree-id1350 . -129) (undo-tree-id1351 . -129) (undo-tree-id1352 . -129) (undo-tree-id1353 . -129) (undo-tree-id1354 . -129) (undo-tree-id1355 . -129) (undo-tree-id1356 . -129) (undo-tree-id1357 . -129) (undo-tree-id1358 . -129) (undo-tree-id1359 . -190) (undo-tree-id1360 . -190) (undo-tree-id1361 . -190) (undo-tree-id1362 . -190) (undo-tree-id1363 . -190) (undo-tree-id1364 . -190) (undo-tree-id1365 . -190) (undo-tree-id1366 . -190) (undo-tree-id1367 . -190) (undo-tree-id1368 . -190) (undo-tree-id1369 . -190) (undo-tree-id1370 . -190) (undo-tree-id1371 . -190) (undo-tree-id1372 . -190) (undo-tree-id1373 . -190) (undo-tree-id1374 . -190) (undo-tree-id1375 . -190) (undo-tree-id1376 . -190) (undo-tree-id1377 . -190) (undo-tree-id1378 . -190) (undo-tree-id1379 . -190) (undo-tree-id1380 . -190) (undo-tree-id1381 . -190) (undo-tree-id1382 . -190) (undo-tree-id1383 . -190) (undo-tree-id1384 . -190) (undo-tree-id1385 . -190) (undo-tree-id1386 . -190) (undo-tree-id1387 . -190) (undo-tree-id1388 . -190) (undo-tree-id1389 . -190) (undo-tree-id1390 . -190) (undo-tree-id1391 . -190) (undo-tree-id1392 . -190) (undo-tree-id1393 . -190) (undo-tree-id1394 . -190) (undo-tree-id1395 . -190) (undo-tree-id1396 . -192) 645) ((455 . 647)) (26367 32647 671494 329000) 0 nil])
([nil nil ((" " . 644) (undo-tree-id1483 . -1) (undo-tree-id1485 . -1) (undo-tree-id1487 . -1) (undo-tree-id1489 . -1) (undo-tree-id1491 . -1) (undo-tree-id1493 . -1) (undo-tree-id1495 . -1) (undo-tree-id1497 . -1) (undo-tree-id1499 . -1) (undo-tree-id1501 . -1) (undo-tree-id1503 . -1) (undo-tree-id1505 . -1) (undo-tree-id1507 . -1) (undo-tree-id1509 . -1) (undo-tree-id1511 . -1) (undo-tree-id1513 . -1) (undo-tree-id1515 . -1) (undo-tree-id1517 . -1) (undo-tree-id1519 . -1) (undo-tree-id1521 . -1) (undo-tree-id1523 . -1) (undo-tree-id1525 . -1) (undo-tree-id1527 . -1) (undo-tree-id1529 . -1) (undo-tree-id1531 . -1) (undo-tree-id1533 . -1)) ((644 . 645)) (26367 32669 197922 976000) 0 nil])
nil
([nil nil ((" \\" . 653) (undo-tree-id1460 . -1) (undo-tree-id1461 . -1) (undo-tree-id1462 . -1) (undo-tree-id1464 . -1) (undo-tree-id1466 . -1) (undo-tree-id1468 . -1) (undo-tree-id1470 . -1) (undo-tree-id1472 . -1) (undo-tree-id1474 . -1) (undo-tree-id1476 . -1) (undo-tree-id1478 . -1) (undo-tree-id1480 . -2)) ((653 . 655)) (26367 32668 997568 352000) 0 nil])
([nil nil ((" \\" . 716) (undo-tree-id1444 . -1) (undo-tree-id1445 . -2) (undo-tree-id1447 . -1) (undo-tree-id1449 . -1) (undo-tree-id1451 . -1) (undo-tree-id1453 . -1) (undo-tree-id1455 . -1) (undo-tree-id1457 . -1) (undo-tree-id1459 . -2)) ((716 . 718) (t 26367 32653 62554 337000)) (26367 32653 12468 882000) 0 nil])
nil
